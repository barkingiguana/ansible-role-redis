---
services: docker

env:
  - distro: centos7
    redis_daemon: redis
    test_playbook: test.yml
  # - distro: fedora24
  #   redis_daemon: redis
  - distro: ubuntu1604
    redis_daemon: redis-server
    test_playbook: test.yml
  - distro: ubuntu1604
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    redis_daemon: redis-server
    test_playbook: test_with_include.yml
  - distro: centos7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    redis_daemon: redis
    test_playbook: test_with_include.yml

script:
  # Configure test script so we can run extra tests after playbook is run.
  - export container_id=$(date +%s)
  - export cleanup=false

  # Download test shim.
  - wget -O ${PWD}/tests/test.sh https://gist.githubusercontent.com/geerlingguy/73ef1e5ee45d8694570f334be385e181/raw/
  - chmod +x ${PWD}/tests/test.sh

  # Run tests.
  - ${PWD}/tests/test.sh

  # Make sure Redis is running, and can be stopped and started cleanly.
  - 'docker exec --tty ${container_id} env TERM=xterm systemctl --no-pager status ${redis_daemon}'
  - 'docker exec --tty ${container_id} env TERM=xterm systemctl --no-pager stop ${redis_daemon}'
  - 'docker exec --tty ${container_id} env TERM=xterm systemctl --no-pager start ${redis_daemon}'

after_failure:
  - 'docker exec --tty ${container_id} env TERM=xterm cat /var/log/redis/redis-server.log'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
